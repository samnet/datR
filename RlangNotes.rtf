{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf110
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fmodern\fcharset0 Courier;\f2\fnil\fcharset0 Monaco;
}
{\colortbl;\red255\green255\blue255;\red62\green62\blue62;\red6\green0\blue135;\red158\green0\blue3;
\red26\green26\blue26;\red181\green118\blue12;}
\paperw11900\paperh16840\margl1440\margr1440\vieww9620\viewh13560\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\b\fs24 \cf0 ##\'a0Manipulating data frames\
Rbind, data.frame\

\b0 E.g.,: \
data = data.frame(Country,le)\
data$Population = c(19900,12311331,131331) \
Country = c(\'91Australia\'92, \'91Greece\'92)\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 le = c(82,81)\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 Population = c(123123,1231231231)\
newcoutnrydata = data.frame(Country, le, Population)  \
AllCountryData = rbind(data, newcoutnrydata)\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\b \cf0 WHO_Eu=subset(WHO, Region == 'Europe')
\b0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \

\b ##\'a0Interacting with Directories\
list.files()\

\b0 \

\b ## Reading/writing files
\b0 \

\b read.csv\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 write.csv(WHO_Eu, 'WHO_Eu.csv')\
\
\pard\pardeftab720\partightenfactor0

\f1\b0\fs26 \cf0 \expnd0\expndtw0\kerning0
>\'a0jpeg('rplot.jpg')\
>\'a0plot(x,y)\
>\'a0dev.off()\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\b\fs24 \cf0 \kerning1\expnd0\expndtw0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
##\'a0Exploratory statistics\
str(data): 
\b0 gives name, type, first few values\

\b summary(data): \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 which.min(data)\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
## Tables\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 table(WHO$Region)\
tapply(WHO$Over60, WHO$Region, mean, na.rm=TRUE)
\b0  splits the data by the second arguemnt and applies th third arguemtn to the first argument
\b \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\b0 \cf0 Group argument 1by argument 2 and apply argument 3 to it\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\b \cf0 \
\
ls()/ rm(a variable)\
 \
## Finding and subsetting: \
\pard\tx528\tx1056\tx1584\tx2112\tx2640\tx3168\tx3696\tx4224\tx4752\tx5280\tx5808\tx6337\tx6865\tx7393\tx7921\tx8449\tx8977\tx9505\tx10033\tx10561\tx11089\tx11617\tx12145\tx12674\tx13202\tx13730\tx14258\tx14786\tx15314\tx15842\tx16370\tx16898\tx17426\tx17954\tx18483\tx19011\tx19539\tx20067\tx20595\tx21123\tx21651\tx22179\tx22707\tx23235\tx23763\tx24291\tx24820\tx25348\tx25876\tx26404\tx26932\tx27460\tx27988\tx28516\tx29044\tx29572\tx30100\tx30628\tx31157\tx31685\tx32213\tx32741\tx33269\tx33797\li80\fi-80\pardirnatural\partightenfactor0

\f2\b0\fs22 \cf2 # Finding the index of CAVIAR in the dataset\
\cf3   match(\cf4 "CAVIAR"\cf3 , \cf0 USDA\cf3 $\cf0 Description\cf3 )\
\pard\pardeftab720\partightenfactor0

\f0\fs32 \cf5 \expnd0\expndtw0\kerning0
Another way of doing this would be to use the %in% operator in R. This operator checks for inclusion in a set. You can create the same subset by typing the following two lines in your R console:\
TopLocations = c("STREET", "PARKING LOT/GARAGE(NON.RESID.)", "ALLEY", "GAS STATION", "DRIVEWAY - RESIDENTIAL")\
Top5 = subset(mvt, LocationDescription %in% TopLocations)\
R will remember the other categories of the LocationDescription variable from the original dataset, so running table(Top5$LocationDescription) will have a lot of unnecessary output. To make our tables a bit nicer to read, we can refresh this factor variable. In your R console, type:\
Top5$LocationDescription = factor(Top5$LocationDescription)\
\pard\tx528\tx1056\tx1584\tx2112\tx2640\tx3168\tx3696\tx4224\tx4752\tx5280\tx5808\tx6337\tx6865\tx7393\tx7921\tx8449\tx8977\tx9505\tx10033\tx10561\tx11089\tx11617\tx12145\tx12674\tx13202\tx13730\tx14258\tx14786\tx15314\tx15842\tx16370\tx16898\tx17426\tx17954\tx18483\tx19011\tx19539\tx20067\tx20595\tx21123\tx21651\tx22179\tx22707\tx23235\tx23763\tx24291\tx24820\tx25348\tx25876\tx26404\tx26932\tx27460\tx27988\tx28516\tx29044\tx29572\tx30100\tx30628\tx31157\tx31685\tx32213\tx32741\tx33269\tx33797\li80\fi-80\pardirnatural\partightenfactor0

\f2\fs22 \cf3 \kerning1\expnd0\expndtw0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\b\fs24 \cf0 ## Type casting:\
\pard\tx528\tx1056\tx1584\tx2112\tx2640\tx3168\tx3696\tx4224\tx4752\tx5280\tx5808\tx6337\tx6865\tx7393\tx7921\tx8449\tx8977\tx9505\tx10033\tx10561\tx11089\tx11617\tx12145\tx12674\tx13202\tx13730\tx14258\tx14786\tx15314\tx15842\tx16370\tx16898\tx17426\tx17954\tx18483\tx19011\tx19539\tx20067\tx20595\tx21123\tx21651\tx22179\tx22707\tx23235\tx23763\tx24291\tx24820\tx25348\tx25876\tx26404\tx26932\tx27460\tx27988\tx28516\tx29044\tx29572\tx30100\tx30628\tx31157\tx31685\tx32213\tx32741\tx33269\tx33797\li80\fi-80\pardirnatural\partightenfactor0

\f2\b0\fs22 \cf3  
\fs20\fsmilli10470 \cf2 # Creating a variable that takes value 1 if the food has higher sodium than average, 0 otherwise\
\pard\tx528\tx1056\tx1584\tx2112\tx2640\tx3168\tx3696\tx4224\tx4752\tx5280\tx5808\tx6337\tx6865\tx7393\tx7921\tx8449\tx8977\tx9505\tx10033\tx10561\tx11089\tx11617\tx12145\tx12674\tx13202\tx13730\tx14258\tx14786\tx15314\tx15842\tx16370\tx16898\tx17426\tx17954\tx18483\tx19011\tx19539\tx20067\tx20595\tx21123\tx21651\tx22179\tx22707\tx23235\tx23763\tx24291\tx24820\tx25348\tx25876\tx26404\tx26932\tx27460\tx27988\tx28516\tx29044\tx29572\tx30100\tx30628\tx31157\tx31685\tx32213\tx32741\tx33269\tx33797\li80\fi-80\pardirnatural\partightenfactor0
\cf3   \cf0 HighSodium\cf3  = as.numeric(\cf0 USDA\cf3 $\cf0 Sodium\cf3  > mean(\cf0 USDA\cf3 $\cf0 Sodium\cf3 , \cf0 na.rm\cf3 =\cf6 TRUE\cf3 ))\
  str(\cf0 HighSodium\cf3 )\
\cf2 # Adding the variable to the dataset\
\cf3   \cf0 USDA\cf3 $\cf0 HighSodium\cf3  = as.numeric(\cf0 USDA\cf3 $\cf0 Sodium\cf3  > mean(\cf0 USDA\cf3 $\cf0 Sodium\cf3 , \cf0 na.rm\cf3 =\cf6 TRUE\cf3 ))\
\pard\pardeftab720\partightenfactor0

\f0\fs31\fsmilli15840 \cf5 \expnd0\expndtw0\kerning0
DateConvert = as.Date(strptime(mvt$Date, "%m/%d/%y %H:%M"))\
mvt$Month = months(DateConvert)\
mvt$Weekday = weekdays(DateConvert)\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\b\fs24 \cf0 \kerning1\expnd0\expndtw0 ## Working with dates:\

\b0 tapply(IBM$StockPrice, months(IBM$Date), mean)\
tapply(IBM$StockPrice, IBM$Date, mean)
\b \
\
\
##\'a0Unordered factor:\
\
\pard\pardeftab720\partightenfactor0

\b0\fs32 \cf5 \expnd0\expndtw0\kerning0
However, by default R selects the first level alphabetically ("American Indian/Alaska Native") as the reference level of our factor instead of the most common level ("White"). Set the reference level of the factor by typing the following two lines in your R console:\
pisaTrain$raceeth = relevel(pisaTrain$raceeth, "White")
\b\fs24 \cf0 \kerning1\expnd0\expndtw0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
##\'a0Missing data:\
\
\pard\pardeftab720\partightenfactor0

\b0\fs32 \cf5 \expnd0\expndtw0\kerning0
pisaTrain = na.omit(pisaTrain)\
pisaTest = na.omit(pisaTest)\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\b\fs24 \cf0 \kerning1\expnd0\expndtw0 \
\
\
##\'a0Artificially splitting the data\

\b0 set.seed(someNb)\
split = sample.split(quality$PoorCare, SplitRatio=.75). Makes sure the dependent varialbe is well balanced (so the test set is representative of the training set)\
qualityTrain = subset(quality, split==TRUE)
\b \
\
\
##\'a0Packages:\

\b0 library(caTools)\

\b \
##\'a0Visuals:
\b0\fs31\fsmilli15840 \cf5 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\partightenfactor0
\cf5 hist(crimeData$Date, breaks=100)\
boxplot(crimeData$Date ~ crimeData$Arrest)\
\pard\pardeftab720\partightenfactor0

\fs32 \cf5 You can add a line to a plot in R by using the lines function instead of the plot function. Keeping the plot for Coca-Cola open, type in your R console:\
lines(ProcterGamble$Date, ProcterGamble$StockPrice)\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\b\fs24 \cf0 \kerning1\expnd0\expndtw0 ## Regression:\
\pard\pardeftab720\partightenfactor0

\b0\fs32 \cf5 \expnd0\expndtw0\kerning0
\
m1 = lm(wdata$Price ~ wdata$AGST)\
m1$residuals\
> m2 = lm(Price ~ AGST + HarvestRain, data =wdata)\
> predict(m3, newdata=wtest)\
shorthand notation "readingScore ~ ." to mean "predict readingScore using all the other variables in the data frame." The period is used to replace listing out all of the IVs. \
\
(a bit of math:\
The training-set RMSE can be computed by first computing the SSE:\
SSE = sum(lmScore$residuals^2)\
and then dividing by the number of observations and taking the square root:\
RMSE = sqrt(SSE / nrow(pisaTrain))\
)\
\
Logistic regression model: \
glm(DV ~ IV, data, family = binomial)\
predict(data, type=\'91response\'92)
\f2\fs20\fsmilli10470 \cf3 \kerning1\expnd0\expndtw0 \
}